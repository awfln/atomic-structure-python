#version 330 core

layout (location = 0) in vec3 vertexPos;
layout (location = 1) in vec3 vertexColor;

uniform mat4 model;
uniform mat4 projection;

out vec3 fragmentColor;

void main()
{
    gl_Position = projection * model * vec4(vertexPos, 1.0);

    vec3 light_color = vec3(1.0,1.0,1.0);
    float ambient_light_strength = 0.9;
    vec3 ambient_tint = ambient_light_strength * light_color;
    vec3 ambient_color = ambient_tint * vertexColor;

    vec4 pos_for_light = gl_Position;
    float light_angle = 70; //deg
    float light_x = light_angle/90;
    float light_y = 1-light_x;
    float directional_strength = 0.2;
    vec3 directional_color = vec3(vertexColor * (((light_x*gl_Position.x) + (light_y*gl_Position.y))/2));
    directional_color *= directional_strength;
    fragmentColor = ambient_color + directional_color;
}